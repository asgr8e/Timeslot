import msal
import requests
import os

# Initialize the MSAL confidential client
client_id = "<Your Client ID>"
client_secret = "<Your Client Secret>"
authority = "https://login.microsoftonline.com/<Your Tenant ID>"
shared_mailbox = "<Shared Mailbox Email>"

app = msal.ConfidentialClientApplication(
    client_id,
    authority=authority,
    client_credential=client_secret,
)

# Define the scopes
scopes = ["https://graph.microsoft.com/.default"]

# Acquire token
result = None
result = app.acquire_token_silent(scopes, account=None)

if not result:
    result = app.acquire_token_for_client(scopes)

if "access_token" in result:
    # Call Microsoft Graph API to get messages from the shared mailbox
    graph_api_endpoint = f"https://graph.microsoft.com/v1.0/users/{shared_mailbox}/mailFolders/Inbox/messages"
    headers = {"Authorization": "Bearer " + result["access_token"]}
    params = {"$filter": "subject eq 'snow'"}
    response = requests.get(graph_api_endpoint, headers=headers, params=params)
    response.raise_for_status()
    messages = response.json()

    # Find the first message with an attachment
    for message in messages["value"]:
        if message["hasAttachments"]:
            # Get the attachments
            attachment_endpoint = f"https://graph.microsoft.com/v1.0/users/{shared_mailbox}/messages/{message['id']}/attachments"
            attachment_response = requests.get(attachment_endpoint, headers=headers)
            attachment_response.raise_for_status()
            attachments = attachment_response.json()

            # Download the first attachment
            for attachment in attachments["value"]:
                if "contentBytes" in attachment:
                    file_content = base64.b64decode(attachment["contentBytes"])
                    file_path = os.path.join(os.getcwd(), attachment["name"])
                    with open(file_path, "wb") as file:
                        file.write(file_content)
                    print(f"Downloaded {attachment['name']} to {file_path}")
                    break
            break
else:
    print(result.get("error"))
    print(result.get("error_description"))
    print(result.get("correlation_id"))
